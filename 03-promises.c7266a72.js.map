{"mappings":"YACA,IAAMA,EAAOC,SAASC,cAAc,SACrBD,SAASE,eAAe,OAEvCH,EAAKI,iBAAiB,UAEtB,SAAmBC,GACjBA,EAAMC,iBAKN,IAJA,IAAgCC,EAAAF,EAAMG,cAA9BC,EAAwBF,EAAxBE,MAAOC,EAAiBH,EAAjBG,KAAMC,EAAWJ,EAAXI,OACjBC,EAAaC,OAAOJ,EAAMK,OAC1BC,EAAYF,OAAOH,EAAKI,OACxBE,EAAcH,OAAOF,EAAOG,OACvBG,EAAW,EAAGA,GAAYD,EAAaC,MAIlD,SAAuBC,EAAUT,GAC/B,IAAMU,EAAgBC,KAAKC,SAAW,GACtB,IAAIC,SAAQ,SAACC,EAASC,GACpCC,YAAW,WACLN,EACFI,EAAQ,CAAEL,WAAUT,UAEpBe,EAAO,CAAEN,WAAUT,S,GAEpBA,E,KAZLiB,CAAcR,SAAUN,GACxBA,GAAcG,C","sources":["src/js/03-promises.js"],"sourcesContent":["\nconst form = document.querySelector(\".form\");\nconst button = document.getElementById(\"btn\");\n\nform.addEventListener(\"submit\", onPromise);\n\nfunction onPromise(event) {\n  event.preventDefault();\n  const { delay, step, amount } = event.currentTarget;\n  let delayValue = Number(delay.value);\n  let stepDelay = Number(step.value);\n  let amountValue = Number(amount.value);\n  for (let position = 1; position <= amountValue; position++);\n  createPromise(position, delayValue);\n  delayValue += stepDelay\n}\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  const promise = new Promise((resolve, reject) => {\n    setTimeout(() => {\n      if (shouldResolve) {\n        resolve({ position, delay });\n      } else {\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\n"],"names":["$ce04d3a99e08e73b$var$form","document","querySelector","getElementById","addEventListener","event","preventDefault","_currentTarget","currentTarget","delay","step","amount","delayValue","Number","value","stepDelay","amountValue","_$position","position","shouldResolve","Math","random","Promise","resolve","reject","setTimeout","$ce04d3a99e08e73b$var$createPromise"],"version":3,"file":"03-promises.c7266a72.js.map"}